<% if [ -z "${DOMAIN_NGXCONF}" ] ; then -%>
#======================================================================================================================
# WARNING: This file is generated. Do not make changes to this file.
# Changes will be overwritten the next time the container is started.
#
# To add server names or aliases please use /ssl/conf.sh (see ssl-conf-sample.sh).
#
# If you need a fully custom configuration then add the following to /ssl/conf.sh:
#   NGXCONF["<%= "${DOMAIN_NAME}" %>"]="custom"
# This will stop this file being generated next time the container is started.
#
# Copyright (c) 2021 Ben Green <https://bcgdesign.com>
#======================================================================================================================
<% else -%>
#======================================================================================================================
# You can make changes to this file.
#
# WARNING:
#   a) changes you make could break the normal functioning of your sites if you don't know what you're doing
#   b) you will need to add future bug fixes and features manually
#   c) if you change any environment variables (e.g. PROXY_SSL_REDIRECT_TO_CANONICAL) nothing will happen as certain
#      features require the Nginx configuration files to be regenerated when the container environment is changed
#   d) custom configuration can be added to the /sites/<%= "${DOMAIN_NAME}" %>.d directory -
#      these are loaded as part of the HTTPS server block below
#
# If you would like to return to using generated configuration then remove the following from /ssl/conf.sh:
#   NGXCONF["<%= "${DOMAIN_NAME}" %>"]=""
# This will cause this file to be regenerated next time the container is started.
#
# Copyright (c) 2021 Ben Green <https://bcgdesign.com>
#======================================================================================================================
<% fi %>
#======================================================================================================================
# HTTP
#======================================================================================================================

server {
    # serve site for these domain names only
    server_name                     <%= "${SERVER_NAMES}" %>;

    # listen on HTTP port for both IPv4 and IPv6
    listen                          80;
    listen                          [::]:80;

<%+ ./nginx-acme-challenge.part.esh %>

    location / {
<% if [ "${PROXY_SSL_REDIRECT_TO_CANONICAL}" = "1" ] ; then -%>
        # redirect all other requests to HTTPS using primary domain name
        return                      301 <%= "https://${DOMAIN_NAME}" %>$request_uri;
<% else -%>
        # redirect all other requests to HTTPS using current host
        return                      301 https://$host$request_uri;
<% fi -%>
    }
}


#======================================================================================================================
# HTTPS
#======================================================================================================================

server {
    # serve site for these domain names only
    server_name                     <%= "${SERVER_NAMES}" %>;

    # listen on SSL port for both IPv4 and IPv6, and enable HTTP/2
    listen                          443 ssl http2;
    listen                          [::]:443 ssl http2;

    # because he was a legend
    include                         helpers/nginx-discworld.conf;

<% if [ "${PROXY_SSL_REDIRECT_TO_CANONICAL}" = "1" ] ; then -%>
    # redirect to primary domain name
    if ($host != <%= "${DOMAIN_NAME}" %>) {
        return                      301 <%= "https://${DOMAIN_NAME}" %>$request_uri;
    }
<% fi -%>

    # optional file to have multiple upstream servers
    include                         <%= "${CUSTOM_CONF}/${DOMAIN_NAME}[.]upstream" %>;

    # main site configuration block
    location / {
        proxy_pass                  <%= "${UPSTREAM}" %>;
        include                     helpers/proxy-params.conf;
        include                     helpers/proxy-secure-headers.conf;
        error_page                  502 503 504 /maintenance.html;
        include                     <%= "${CUSTOM_CONF}/*.conf" %>;
    }

    # returns a friendly auto-refreshing 'maintenance' page if upstream servers are not available
    include                         helpers/proxy-maintenance.conf;

<%+ ./nginx-ssl-certs.part.esh %>
}
