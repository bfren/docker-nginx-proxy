#!/command/with-contenv bash

set -euo pipefail
export BF_E=`basename ${0}`


#======================================================================================================================
# Executable usage.
#======================================================================================================================

usage () {
    echo "Regenerate Nginx configuration files."
    echo "Usage: `basename ${0}` [-f] [-h]" 2>&1
    echo "    -f    Force all configuration files to be deleted (even custom ones)."
    echo "    -h    Show this usage message."
    exit 2
}

MODE=0
while getopts ":hf" C ; do
    case ${C} in
        h) usage ;;
        f) FORCE=1 ;;
        ?) bf-notok "Invalid option: -${OPTARG}" "nginx-regenerate" && usage ;;
    esac
done


#======================================================================================================================
# Load SSL configuration.
#======================================================================================================================

bf-echo "Loading SSL configuration."
source ${BF_INC}/proxy-load-conf.sh
bf-debug "Loaded: ${DOMAINS[*]}."


#======================================================================================================================
# Delete Nginx configuration files.
#======================================================================================================================

bf-echo "Getting Nginx sites configuration."
NGINX_CONFIGS=(${PROXY_SITES}/*)

bf-echo "Checking against configured domains..."
for CFG in "${NGINX_CONFIGS[@]}" ; do

    # do nothing if this is a file
    [[ -f "${CFG}" ]] && continue

    # get name and strip .d from end of directory
    NAME=$(basename -- "${CFG}")
    STRIPPED=${NAME::-2}
    bf-debug " .. ${STRIPPED}"

    # the domain has standard config - delete conf file
    CUSTOM_CONF=`get-custom "${STRIPPED}"`
    if [[ "${CUSTOM_CONF}" = "false" ]] ; then

        bf-debug " .. standard config: remove configuration file"
        rm -f ${PROXY_SITES}/${STRIPPED}.conf

    # the domain has custom config but force is enabled - delete conf file
    elif [[ "${FORCE-}" = "1" ]] ; then

        bf-debug " .. custom config with force enabled: remove configuration file"
        rm -f ${PROXY_SITES}/${STRIPPED}.conf

    # the domain has custom config and force is not enabled - do nothing
    else

        bf-debug " .. custom config and force not enabled: leave"

    fi

    # force is enabled - delete configuration directory
    if [[ "${FORCE-}" = "1" ]] ; then

        bf-debug " .. force enabled: remove configuration directory"
        rm -rf ${PROXY_SITES}/${STRIPPED}.d

    fi

done

bf-done


#======================================================================================================================
# Reinitialise.
#======================================================================================================================

ssl-init
